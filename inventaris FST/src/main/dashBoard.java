/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

import Model.Model_pesananSupply;
import TableMod.TableMod_pesananSupply;
import config.koneksi;
import dao.DAO_pesanansuplay;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import service.Service_Pesanan;

/**
 *
 * @author SyafiqUbai
 */
public class dashBoard extends javax.swing.JPanel {

    /**
     * Creates new form dashBoard
     */
    private java.sql.Connection conn;
    
    private TableMod_pesananSupply tblModel_psn = new TableMod_pesananSupply();
    private Service_Pesanan servis_psn = new DAO_pesanansuplay();

    public dashBoard() {
        initComponents();
        conn = koneksi.getConnection();
        tbl_riwayat.setModel(tblModel_psn);
        hitungJumlahDataBarang();
        hitungJumlahDataMenipis();
        hitungJumlahPemesan();
        hitungJumlahSupplier();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        card_pemesan = new roundpanel.RoundPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_pemesan = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        card_Barang = new roundpanel.RoundPanel();
        jLabel4 = new javax.swing.JLabel();
        lb_jmhBarang = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        scrollPaneWin111 = new scrollbarwin11.ScrollPaneWin11();
        tbl_riwayat = new tablecustom.tablez();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        card_stokMenipis1 = new roundpanel.RoundPanel();
        jLabel11 = new javax.swing.JLabel();
        lb_stokMenipis = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        card_Barang1 = new roundpanel.RoundPanel();
        jLabel14 = new javax.swing.JLabel();
        lb_supplier = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));

        card_pemesan.setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pemesan");

        lb_pemesan.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb_pemesan.setForeground(new java.awt.Color(255, 255, 255));
        lb_pemesan.setText("999");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/people.png"))); // NOI18N

        javax.swing.GroupLayout card_pemesanLayout = new javax.swing.GroupLayout(card_pemesan);
        card_pemesan.setLayout(card_pemesanLayout);
        card_pemesanLayout.setHorizontalGroup(
            card_pemesanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_pemesanLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(card_pemesanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_pemesan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(27, 27, 27))
        );
        card_pemesanLayout.setVerticalGroup(
            card_pemesanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card_pemesanLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(card_pemesanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(card_pemesanLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_pemesan)))
                .addGap(18, 18, 18))
        );

        card_Barang.setBackground(new java.awt.Color(0, 153, 102));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Barang");

        lb_jmhBarang.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb_jmhBarang.setForeground(new java.awt.Color(255, 255, 255));
        lb_jmhBarang.setText("999");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/goods (1).png"))); // NOI18N

        javax.swing.GroupLayout card_BarangLayout = new javax.swing.GroupLayout(card_Barang);
        card_Barang.setLayout(card_BarangLayout);
        card_BarangLayout.setHorizontalGroup(
            card_BarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_BarangLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(card_BarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_jmhBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        card_BarangLayout.setVerticalGroup(
            card_BarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_BarangLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(card_BarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(card_BarangLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_jmhBarang)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbl_riwayat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPaneWin111.setViewportView(tbl_riwayat);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Riwayat Pemesanan");

        card_stokMenipis1.setBackground(new java.awt.Color(0, 153, 102));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Stok Menipis");

        lb_stokMenipis.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb_stokMenipis.setForeground(new java.awt.Color(255, 255, 255));
        lb_stokMenipis.setText("999");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hazardous-material.png"))); // NOI18N

        javax.swing.GroupLayout card_stokMenipis1Layout = new javax.swing.GroupLayout(card_stokMenipis1);
        card_stokMenipis1.setLayout(card_stokMenipis1Layout);
        card_stokMenipis1Layout.setHorizontalGroup(
            card_stokMenipis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_stokMenipis1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(card_stokMenipis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_stokMenipis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(20, 20, 20))
        );
        card_stokMenipis1Layout.setVerticalGroup(
            card_stokMenipis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_stokMenipis1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(card_stokMenipis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(card_stokMenipis1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_stokMenipis)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        card_Barang1.setBackground(new java.awt.Color(0, 153, 102));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Supplier");

        lb_supplier.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lb_supplier.setForeground(new java.awt.Color(255, 255, 255));
        lb_supplier.setText("999");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/parcel.png"))); // NOI18N

        javax.swing.GroupLayout card_Barang1Layout = new javax.swing.GroupLayout(card_Barang1);
        card_Barang1.setLayout(card_Barang1Layout);
        card_Barang1Layout.setHorizontalGroup(
            card_Barang1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_Barang1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(card_Barang1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_supplier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        card_Barang1Layout.setVerticalGroup(
            card_Barang1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_Barang1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(card_Barang1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(card_Barang1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_supplier)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 995, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scrollPaneWin111, javax.swing.GroupLayout.PREFERRED_SIZE, 995, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(card_pemesan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(card_Barang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(card_Barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(card_stokMenipis1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(card_Barang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(card_Barang1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(card_pemesan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(card_stokMenipis1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(scrollPaneWin111, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        add(panel1, "card2");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private roundpanel.RoundPanel card_Barang;
    private roundpanel.RoundPanel card_Barang1;
    private roundpanel.RoundPanel card_pemesan;
    private roundpanel.RoundPanel card_stokMenipis1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lb_jmhBarang;
    private javax.swing.JLabel lb_pemesan;
    private javax.swing.JLabel lb_stokMenipis;
    private javax.swing.JLabel lb_supplier;
    private javax.swing.JPanel panel1;
    private scrollbarwin11.ScrollPaneWin11 scrollPaneWin111;
    private tablecustom.tablez tbl_riwayat;
    // End of variables declaration//GEN-END:variables

    private void hitungJumlahDataBarang() {
        PreparedStatement st = null;
        ResultSet rs = null;

        try {
            // Query untuk mengambil jumlah data dari tabel barang tanpa filter
            String countSql = "SELECT COUNT(*) AS total FROM barang";
            st = conn.prepareStatement(countSql);
            rs = st.executeQuery();

            if (rs.next()) {
                // Ambil jumlah data dari hasil query dan konversi menjadi String
                String jumlahData = Integer.toString(rs.getInt("total"));

                // Set nilai lb_jmhBarang dengan jumlahData
                lb_jmhBarang.setText(jumlahData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void hitungJumlahDataMenipis() {
        PreparedStatement st = null;
        ResultSet rs = null;

        try {
            // Query untuk mengambil jumlah data dari tabel barang tanpa filter
            String countSql = "SELECT COUNT(*) AS total FROM barang WHERE stok <= 20";
            st = conn.prepareStatement(countSql);
            rs = st.executeQuery();

            if (rs.next()) {
                // Ambil jumlah data dari hasil query dan konversi menjadi String
                String jumlahData = Integer.toString(rs.getInt("total"));

                // Set nilai lb_jmhBarang dengan jumlahData
                lb_stokMenipis.setText(jumlahData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void hitungJumlahPemesan() {
        PreparedStatement st = null;
        ResultSet rs = null;

        try {
            // Query untuk mengambil jumlah data dari tabel barang tanpa filter
            String countSql = "SELECT COUNT(*) AS total FROM pemesan_barang";
            st = conn.prepareStatement(countSql);
            rs = st.executeQuery();

            if (rs.next()) {
                // Ambil jumlah data dari hasil query dan konversi menjadi String
                String jumlahData = Integer.toString(rs.getInt("total"));

                // Set nilai lb_jmhBarang dengan jumlahData
                lb_pemesan.setText(jumlahData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void hitungJumlahSupplier() {
        PreparedStatement st = null;
        ResultSet rs = null;

        try {
            // Query untuk mengambil jumlah data dari tabel barang tanpa filter
            String countSql = "SELECT COUNT(*) AS total FROM supplier";
            st = conn.prepareStatement(countSql);
            rs = st.executeQuery();

            if (rs.next()) {
                // Ambil jumlah data dari hasil query dan konversi menjadi String
                String jumlahData = Integer.toString(rs.getInt("total"));

                // Set nilai lb_jmhBarang dengan jumlahData
                lb_supplier.setText(jumlahData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    private void loadData() {
        List<Model_pesananSupply> list = servis_psn.getData();
        tblModel_psn.setData(list);
    }

}
